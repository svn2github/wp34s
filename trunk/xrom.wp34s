/*
 *  This is to be preprocessed !
 */
#define Num #
#define GSB XEQ

#include "features.h"
#include "data.h"		// for user state bit positions
#include "errors.h"		// for error numbers

/*
 * Define some utility macros to assist with xIN
 */
#define xIN_INARGS(n)	(n & 7)
#define xIN_OUTARGS(n)	((n & 7) << 3)
#define xIN_ARGS(i, o)	(xIN_INARGS(i) | xIN_OUTARGS(o))
#define xIN_LASTX	64
#define xIN_COMPLEX	128

/*
 *  Defines for some argument combinations for xIN
 */
#define NILADIC_0		(xIN_ARGS(0, 0))				// octal value
#define NILADIC_1		(xIN_ARGS(0, 1))				// 0010
#define NILADIC_2		(xIN_ARGS(0, 2))				// 0020
#define NILADIC_1_COMPLEX	(xIN_ARGS(0, 2) | xIN_COMPLEX)			// 0320

#define MONADIC			(xIN_ARGS(1, 1) | xIN_LASTX)			// 0111 
#define DYADIC			(xIN_ARGS(2, 1) | xIN_LASTX)			// 0112 
#define TRIADIC			(xIN_ARGS(3, 1) | xIN_LASTX)			// 0112

#define MONADIC_COMPLEX		(xIN_ARGS(2, 1) | xIN_LASTX | xIN_COMPLEX)	// 0322 
#define DYADIC_COMPLEX		(xIN_ARGS(4, 1) | xIN_LASTX | xIN_COMPLEX)	// 0324 


/*
 * Defines for the reserved flags using by xIN & xOUT
 */
#define FLAG_OLD_STACK_DEPTH		.10	/* read only */
#define FLAG_OLD_DOUBLE_MODE		.11	/* read only */
#define FLAG_COMPLEX_RESULT		.12
#define FLAG_SET_LAST_X			.13
#define FLAG_SET_STACK_LIFT		.14
#define FLAG_XIN_ACTIVE			.15	/* read only */


/*
 * Defined for the convergence test command
 */
#define CVG_RELATIVE			00
#define CVS_ABSOLUTE			03
#define CVG_COMPLEX			06

	XLBL"START"		// generate XROM_START symbol
/*
 *  Include each routine here
 */
#include "solve.wp34s"
#include "integrate.wp34s"
#include "prodsum.wp34s"
#include "quadratic.wp34s"
#include "parallel.wp34s"
#include "agm.wp34s"
#include "lambert_w.wp34s"
#include "zeta.wp34s"
#include "distributions.wp34s"
#include "common_entry.wp34s"
#include "next_prime.wp34s"
#include "modes.wp34s"

// Do not move these until the tools are fixed!
#include "derivative.wp34s"
	NOP	// temporary fix to shift XLBL down
	NOP
#include "who.wp34s"
