/**************************************************************************/
/* A quadratic equation solver.
 * Based on code by Franz.
 *
 * Register use:
 * 0	c
 * 1	b^2 - 4ac
 * 2	2a
 * 3	t
 * 4	I
 */
		XLBL"QUAD"				/* Entry: QUADRATIC SOLVER */
			GSB entry
			XLOCAL				/* Registers .00 to .04 are used */
			STOS .00
			RCL I
			STO .04
			R[v]

			RCL+ X				/* 2c b a . */
			x[<->] Z				/* a b 2c . */
			x=0?
				ERR ERR_INVALID		/* Invalid arugment error */
			RCL+ X				/* 2a b 2c . */
			STO .02
			RCL Y				/* b 2a b 2c */
			[cmplx][times]			/* b^2-4ac 2b(a+c) b 2c */
			STO .01
			x<0?
				JMP quad_complex
			[sqrt]				/* sqrt 2b(a+c) b 2c */
			x[<->] Y				/* . sqrt b 2c */
			DROP				/* sqrt b 2c 2c */
			x[<->] Y				/* b sqrt 2c 2c */
			x[>=]0?
				[cmplx]CONJ
			-				/* -b-sqrt 2c 2c 2c */
                        x[!=]0?
			STO/ Y				/* -b-sqrt 2c/(-b-sqrt) 2c 2c */
			RCL/ .02			/* (b-sqrt)/2a 2c/(b-sqrt) 2c 2c */
			JMP quad_fix_stack

quad_complex::		ABS
			[sqrt]				/* sqrt ? b 2c */
			RCL/ .02			/* sqrt/2a ? b 2c */
			RCL Z				/* b sqrt/2a ? b */
			RCL/ .02			/* b/2a sqrt/2a ? b */
			+/-
			GSB quad_fix_stack
			TOP?
				JMP quad_message
			RTN+1

quad_message::		CL[alpha]
			[alpha] C
			VW[alpha]+ X
			RTN

quad_fix_stack::	RCL .00
			STO L				/* Push c into Last X*/
			RCL .04
			STO I				/* Restore I*/
			[cmplx]x[<->] Z
			RCL .04				/* Restore T*/
			RCL .01				/* Preserve b^2 - 4ac*/
			[cmplx]x[<->] Z
			RTN

