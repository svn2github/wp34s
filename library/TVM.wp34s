/*

=================================
* Extended TVM-Solver for WP34s *      Ver. 2.0      Author: Franz Huber
=================================

Keyboard-Layout:
----------------
    N       I      PV      PMT      FV
[A][A]  [A][B]  [A][C]  [A][D]  [A][->]

    NP        NI
[A][STO]  [A][RCL]

Flags/Registers/Labels:
-----------------------
       00     01   02   03   04   05   06   07   08   09   10   11  12
Flag   Entry? --   2I?  --   --   --   <0?  =0?  --   --   --   --  --
Reg.   Key?   N    I    PV   PMT  FV   NP   NI   i    k    im   I1  I2
Lbl.   Start  N?   I?   PV?  PMT? FV?  Init I->i TVM TVM' i->I  --  --

Remarks:
========
- [XEQ]'TVM' to initialize registers and parameters!
- enter values for parameters NP,NI if desired (default=1)
- all financial keys for N,I,PV,PMT,FV and NP,NI work as follows:
  input+key stores the value, key alone calculates the value
  (or just recalls it for NP and NI)
- [R/S] resets the ENTRY? flag (e.g. after own calculations)
- alternative method to use the program:
  [STO/RCL/XEQ]01-05 to store/recall/calculate N,I,PV,PMT,FV
  (result after [XEQ] is not stored automatically!)
  [STO/RCL]06-07 to store/recall NP,NI
- iterative solving for I is limited to ]-1,max(2,I%->i)], i.e.
  from -100% to 200% (or I%->i) interest rate per payment period
  (the upper limit I% can be changed with I [STO]02 or I [A][B])
- if solving for I returns 2 possible solutions ("I1="), then just 
  press [R/S] to switch between I1 and I2 (stored in R11 and R12)
- error messages are displayed if invalid values have been entered:
  (don't use [R/S] after any error message!)
    NP=0 -> "Invalid parameter"
    both N=0 and I=0 -> "Invalid data"
    calculate FV if N=0 -> "Bad mode"
    no solution found for I -> "No root found"
    other invalid entries -> "Domain error" or "+/- Infinity"

Values:
-------
N = total number of periods (or payments)
    N=0 for perpetual payments (N=infinite)
        (not allowed if I=0! -> Error: "Invalid data")

I = annual interest rate (in % per year, -99.9%..999%)
    I=0 for no compounding
        (not allowed if N=0! -> Error: "Invalid data")

PV  = present value (or payment)
PMT = periodical payment
FV  = future value (or payment)
      (not defined for N=0! -> Error: "Bad mode")

Parameters:
-----------
NP = payment frequency PF (payment periods per year)
     NP>0 postnumerand payments (at END of periods)
     NP<0 prenumerand payments (at BEGin of periods)
     NP=0 not allowed! -> Error: "Invalid parameter"

NI = compounding frequency CF (interest periods per year)
     NI>0 decursive interest (compound at end of periods)
     NI<0 anticipative discount (compound at begin of periods)
     NI=0 continuous (theoretical) compounding (NI=infinite)
     |NI|=1 -> effective interest rate
     |NI|>1 -> nominal interest rate

Used formulas:
--------------

    /  (1+I/(100*NI))^(NI/abs(NP))-1  for NI!=0
i = |
    \  e^(I/(100*abs(NP)))-1          for NI=0

    /  1    for NP>0
k = |
    \  1+i  for NP<0

          /  PV*(1+i)^N + PMT*((i+1)^N-1)*k/i + FV = 0  for I!=0 & N!=0
TVM eqn:  |  PV + PMT*N + FV = 0                        for I=0
          \  PV + PMT*k/i = 0                           for N=0

TVM expr: ((1+i)^N-1)*(PMT*k/i + PV) + PV + FV   (SLV iteration for i)

*/

001 LBL'TVM'    // extended TVM-Solver V2.0
002 CL[alpha]
003 [alpha]'TVM'
004 [alpha] [space]
005 [alpha]'Sol'
006 [alpha]'ver'
007 VIEW[alpha]
008 # 013       // Initialize registers & parameters
009 SDR 02
010 R-CLR
011 1
012 STO 06	// NP=1 (annual payments at END of year or period)
013 STO 07	// NI=1 (annual compounding at end of year or period)
014 CLSTK

015 LBL 00	// return after input or calculation
016 FS?C 00
017 SKIP 003
018 STO L
019 CLSTK	// remove intermediate results
020 RCL L
021 STOP	// wait for input or calculation
022 BACK 001	// [R/S] -> clears ENTRY? flag

023 LBL A	// prefix [A] for [A]..[->]
024 CL[alpha]
025 [alpha]'N[narrow-space][narrow-space]'
026 [alpha]'I[narrow-space][narrow-space]'
027 [alpha]'PV[narrow-space]'
028 [alpha]'PMT'
029 [alpha]'[narrow-space]FV'
030 ENTRY?
031 SKIP 002
032 VIEW[alpha]
033 SKIP 001
034 VW[alpha]+ X
035 PSE 99
036 CL[alpha]
037 KEY? 00
038 SKIP 002
039 LBL?[->]00
040 XEQ[->]00
041 GTO 00

042 LBL 11
043 ENTRY?
044 SF 00
045 FC? 00
046 XEQ 01
047 STO 01
048 CL[alpha]
049 [alpha]'N='
050 VW[alpha]+ 01
051 RTN

052 LBL 12
053 CF 02
054 ENTRY?
055 SF 00
056 FC? 00
057 XEQ 02
058 STO 02
059 CL[alpha]
060 FC? 02
061 SKIP 007
062 x=? 11
063 [alpha]'I1='
064 x=? 12
065 [alpha]'I2='
066 PROMPT
067 x[<->] Y
068 BACK 010
069 [alpha]'I='
070 VW[alpha]+ 02
071 RTN

072 LBL 13
073 ENTRY?
074 SF 00
075 FC? 00
076 XEQ 03
077 STO 03
078 CL[alpha]
079 [alpha]'PV='
080 VW[alpha]+ 03
081 RTN

082 LBL 14
083 ENTRY?
084 SF 00
085 FC? 00
086 XEQ 04
087 STO 04
088 CL[alpha]
089 [alpha]'PMT'
090 [alpha] =
091 VW[alpha]+ 04
092 RTN

093 LBL 15
094 ENTRY?
095 SF 00
096 FC? 00
097 XEQ 05
098 STO 05
099 CL[alpha]
100 [alpha]'FV='
101 VW[alpha]+ 05
102 RTN

103 LBL 21
104 ENTRY?
105 SF 00
106 FC?S 00
107 RCL 06
108 STO 06
109 CL[alpha]
110 [alpha]'NP='
111 VW[alpha]+ 06
112 RTN

113 LBL 22
114 ENTRY?
115 SF 00
116 FC?S 00
117 RCL 07
118 STO 07
119 CL[alpha]
120 [alpha]'NI='
121 VW[alpha]+ 07
122 RTN

123 LBL 01	// N=?
124 XEQ 06
125 XEQ 07
126 x=0?
127 SKIP 014
128 RCL 04
129 RCL[times] 09
130 RCL/ 08
131 RCL- 05
132 RCL L
133 RCL+ 03
134 x=0?
135 SKIP 009
136 /
137 LN
138 x[<->] Y
139 LN1+x
140 /
141 SKIP 003
142 RCL- 03
143 RCL- 05
144 RCL/ 04
145 RTN

146 LBL 02	// I=?
147 XEQ 06
148 RCL 01
149 x[!=]0?
150 SKIP 007
151 RCL+ 03	// N=0
152 FS? 06
153 RCL+ 04
154 RCL/ 04
155 1/x
156 +/-
157 GTO 10
158 RCL[times] 04
159 x[!=]0?
160 SKIP 006
161 RCL- 05	// PMT=0
162 RCL/ 03
163 RCL 01
164 XROOT
165 DEC X
166 GTO 10
167 1
168 +/-         // lower limit (-100%)
169 STO 11
170 XEQ 08
171 x[!=]0?
172 SKIP 004
173 1
174 SDR 03
175 RCL+ 11
176 BACK 007
177 STO 10
178 RCL 02
179 XEQ 07
180 2           // upper limit (200%)
181 MAX
182 STO 12
183 XEQ 08
184 x[!=]0?
185 SKIP 004
186 1
187 SDR 03
188 RCL+ 12
189 BACK 007
190 RCL[times] 10
191 x<0?
192 SKIP 034    // one solution
193 RCL 11
194 XEQ 09
195 RCL 12
196 XEQ 09
197 [times]
198 x[>=]0?
199 ERR 20      // no solution
200 RCL 11
201 RCL 12
202 SLV 09      // solve TVM'=0
203 x[<->] 10
204 RCL 10
205 XEQ 08
206 x[approx]0?
207 SKIP 017    // double-solution
208 [times]
209 x[>=]0?
210 ERR 20      // no solution
211 RCL 11
212 RCL 10
213 SLV 08      // solve TVM=0 (1st solution)
214 XEQ 10
215 STO 11
216 RCL 10
217 RCL 12
218 SLV 08      // solve TVM=0 (2nd solution)
219 XEQ 10
220 STO 12
221 CLSTK
222 [cmplx]RCL 11
223 SF 02
224 SKIP 023
225 RCL 10      // double-solution
226 GTO 10
227 RCL 11      // one solution
228 RCL 12
229 SLV 08	// solve TVM=0
230 LBL 10	// i -> I
231 1
232 +/-
233 x[<->] Y
234 x=? Y
235 SKIP 010
236 x=0?
237 SKIP 010
238 LN1+x
239 RCL 06
240 ABS
241 [times]
242 FS? 07
243 SKIP 003
244 RCL/ 07
245 e[^x]-1
246 RCL[times] 07
247 SDL 02
248 RTN

249 LBL 03	// PV=?
250 XEQ 06
251 XEQ 07
252 x=0?
253 SKIP 016
254 RCL 04
255 RCL[times] 09
256 RCL/ 08
257 RCL 01
258 x=0?
259 SKIP 008
260 RCL Y
261 RCL- 05
262 x[<->] Y
263 RCL 08
264 LN1+x
265 [times]
266 e[^x]
267 /
268 RCL- Y
269 SKIP 005
270 RCL- 01
271 x=0?
272 ERR 18	// N=0 and I=0! -> Error: "Invalid data"
273 RCL[times] 04
274 RCL- 05
275 RTN

276 LBL 04	// PMT=?
277 XEQ 06
278 XEQ 07
279 x=0?
280 SKIP 014
281 RCL 01
282 x=0?
283 SKIP 007
284 RCL 03
285 RCL+ 05
286 RCL 08
287 LN1+x
288 RCL[times] 01
289 e[^x]-1
290 /
291 RCL+ 03
292 RCL[times] 08
293 RCL/ 09
294 SKIP 006
295 RCL 01
296 x=0?
297 ERR 18	// N=0 and I=0! -> Error: "Invalid data"
298 RCL 03
299 RCL+ 05
300 RCL/ 01
301 +/-
302 RTN

303 LBL 05	// FV=?
304 XEQ 06
305 RCL 01
306 x=0?
307 ERR 13	// FV invalid for N=0! -> Error: "Bad mode"
308 CLx
309 STO 05
310 XEQ 07
311 XEQ 08
312 +/-
313 RTN

314 LBL 06	// check parameters (NP,NI)
315 RCL 06
316 x=0?
317 ERR 16	// NP=0! -> Error: "Invalid parameter"
318 CF 06
319 x<0?
320 SF 06	// set payments at begin of period (BEGin mode)
321 RCL 07
322 CF 07
323 x=0?
324 SF 07	// set continuous (theoretical) compounding
325 [cmplx]DROP
326 RTN

327 LBL 07	// I -> i,k
328 1
329 STO 09
330 RCL[times] 02
331 x=0?
332 SKIP 012
333 SDR 02
334 FS? 07
335 SKIP 003
336 RCL/ 07
337 LN1+x
338 RCL[times] 07
339 RCL 06
340 ABS
341 /
342 e[^x]-1
343 FS? 06
344 STO+ 09
345 STO 08
346 RTN

347 LBL 08	// TVM expression for SLV routine
348 1
349 STO 09
350 +/-
351 MAX
352 STO 08
353 FS? 06
354 STO+ 09
355 x[!=]0?
356 SKIP 003
357 RCL+ 01     // i=0
358 RCL 04
359 SKIP 013
360 x[!=]? L
361 SKIP 004
362 INC X       // i=-1
363 FC? 06
364 RCL+ 04
365 SKIP 009
366 LN1+x
367 RCL[times] 01
368 e[^x]-1
369 RCL 04
370 RCL/ 08
371 RCL[times] 09
372 RCL+ 03
373 [times]
374 RCL+ 03
375 RCL+ 05
376 RTN

377 LBL 09	// TVM' expression for SLV routine
378 1
379 STO 09
380 +/-
381 MAX
382 STO 08
383 FS? 06
384 STO+ 09
385 x[!=]0?
386 SKIP 010
387 RCL+ 01     // i=0
388 DEC X
389 RCL[times] 01
390 2
391 /
392 FS? 06
393 RCL+ 01
394 RCL[times] 04
395 RCL+ 03
396 RTN
397 x[!=]? L
398 SKIP 003
399 INC X       // i=-1
400 RCL+ 04
401 RTN
402 LN1+x
403 RCL 01
404 DEC X
405 [times]
406 e[^x]
407 RCL[times] 01
408 RCL 04
409 RCL/ 08
410 RCL[times] 09
411 RCL+ 03
412 [times]
413 RCL 08
414 LN1+x
415 RCL[times] 01
416 e[^x]-1
417 RCL[times] 04
418 RCL 08
419 x[^2]
420 /
421 -
422 END
