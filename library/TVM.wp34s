/* This file is part of 34S.
 * 
 * 34S is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * 34S is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
*/

/*

=================================
* Extended TVM-Solver for WP34s *
=================================

Keyboard-Layout:
----------------
  N      PV    PMT     FV
[ A ]  [ B ]  [ C ]  [ D ]

  NP     NI     I
[STO]  [RCL]  [ Rv]
     \   |   /
       [XEQ]

Flags/Registers/Labels:
-----------------------
       00     01   02   03   04   05   06   07   08   09    Stack
Flag   Entry? --   --   --   --   --   <0?  =0?  --   --
Reg.   I2     N    I    PV   PMT  FV   NP   NI   i    k
Lbl.   Start  N?   I?   PV?  PMT? FV?  Init I->i SLV  TVM

Remarks:
========
- program 'TVM' should be loaded into and called from RAM
- [XEQ]'TVM' at first to initialize registers and parameters
- enter values for parameters NP,NI if desired (default=1)
- all financial keys for N,PV,PMT,FV and NP,NI,I work as follows:
  input+key stores the value, key alone calculates the value
  (or just recalls it for NP and NI)
- [R/S] resets the ENTRY? flag (e.g. after own calculations)
- alternative method to use the program:
  [STO/RCL/XEQ]01-05 to store/recall/calculate N,I,PV,PMT,FV
    (result after [XEQ] is not stored automatically!)
  [STO/RCL]06-07 to store/recall NP,NI
- a different 2nd initial guess for I (default=1%) can be entered
  in R00 if the solver fails (the 1st guess 0% is hard-coded)
- error messages are displayed if invalid values have been entered:
  (don't use [R/S] after any error message!)
    NP=0 -> "Invalid parameter"
    both N=0 and I=0 -> "Invalid data"
    calculate FV if N=0 -> "Bad mode"
    no solution found for I -> "Solve failed"
    other invalid values -> "Domain error" or "+/- Infinity"

Values:
-------
N = total number of periods (or payments)
    N=0 for perpetual payments (N=infinite)
        (not allowed if I=0! -> Error: "Invalid data")

I = annual interest rate (in % per year)
    I=0 for no compounding
        (not allowed if N=0! -> Error: "Invalid data")

PV  = present value (or payment)
PMT = periodical payment
FV  = future value (or payment)
      (not defined for N=0! -> Error: "Bad mode")

Parameters:
-----------
NP = payment frequency PF (payment periods per year)
     NP>0 postnumerand payments (at END of periods)
     NP<0 prenumerand payments (at BEGin of periods)
     NP=0 not allowed! -> Error: "Invalid parameter"

NI = compounding frequency CF (interest periods per year)
     NI>0 decursive interest (compound at end of periods)
     NI<0 anticipative discount (compound at begin of periods)
     NI=0 continuous (theoretical) compounding (NI=infinite)
     |NI|=1 -> effective interest rate
     |NI|>1 -> nominal interest rate

Used formulas:
--------------
    /  (1+I/(100*NI))^(NI/abs(NP))-1  for NI!=0
i = |
    \  e^(I/(100*abs(NP)))-1          for NI=0

    /  1    for NP>0
k = |
    \  1+i  for NP<0

          /  PV*(1+i)^N + PMT*((i+1)^N-1)*k/i + FV = 0  for I!=0 & N!=0
TVM eqn:  |  PV + PMT*N + FV = 0                        for I=0
          \  PV + PMT*k/i = 0                           for N=0

TVM expr: ((PV+FV)/((1+i)^N-1)+PV)*i/k+PMT  (SLV iteration for i)

*/

LBL'TVM'        // extended TVM-Solver
	CL[alpha]
	[alpha] T
	[alpha] V
	[alpha] M
	[alpha] [space]
	[alpha] S
	[alpha] l
	[alpha] v
	[alpha]VIEW
	.               // Initialize registers & parameters
	1
	R-CLR
	1
	STO 00  // I2=1% (2nd initial guess for I solver)
	STO 06  // NP=1 (annual payments at END of year or period)
	STO 07  // NI=1 (annual compounding at end of year or period)
	CLSTK

LBL 00  // return after input or calculation
	FS?C 00
	SKIP 03
	RCL- X
	FILL    // remove intermediate results
	RCL L
	STOP    // wait for input or calculation
	BACK 01 // [R/S] -> clears ENTRY? flag

LBL A
	ENTRY?
	SF 00
	FC? 00
	XEQ 01
	STO 01
	GTO 00

LBL B
	ENTRY?
	SF 00
	FC? 00
	XEQ 03
	STO 03
	GTO 00

LBL C
	ENTRY?
	SF 00
	FC? 00
	XEQ 04
	STO 04
	GTO 00

LBL D
	ENTRY?
	SF 00
	FC? 00
	XEQ 05
	STO 05
	GTO 00

LBL 21
	ENTRY?
	SF 00
	FC?S 00
	RCL 06
	STO 06
	GTO 00

LBL 22
	ENTRY?
	SF 00
	FC?S 00
	RCL 07
	STO 07
	GTO 00

LBL 23
	ENTRY?
	SF 00
	FC? 00
	XEQ 02
	STO 02
	GTO 00

LBL 01  // N=?
	XEQ 07
	x=0?
	SKIP 14
	RCL 04
	RCL[times] 09
	RCL/ 08
	RCL- 05
	RCL L
	RCL+ 03
	x=0?
	SKIP 09
	/
	LN
	x[<->]y
	LN1+x
	/
	SKIP 03
	RCL- 03
	RCL- 05
	RCL/ 04
	RTN

LBL 02  // I=?
	XEQ 06
	RCL 01
	x[!=]0?
	SKIP 07
	RCL+ 03
	FS? 06
	RCL+ 04
	RCL/ 04
	1/x
	+/-
	SKIP 11
	RCL[times] 04
	RCL+ 03
	RCL+ 05
	x=0?
	SKIP 06
	0               // I1=0% (1st initial guess for I solver)
	RCL 00  // I2=1% (2nd initial guess for I solver)
	XEQ 07
	SLV 08  // call iterative solver
	SKIP 01
	ERR 20  // no solution found for I! -> Error: "Solve failed"
	x=0?
	SKIP 10
	LN1+x   // i -> I
	RCL 06
	ABS
	[times]
	FS? 07
	SKIP 03
	RCL/ 07
	e[^x]-1
	RCL[times] 07
	SDL 02
	RTN

LBL 03  // PV=?
	XEQ 07
	x=0?
	SKIP 16
	RCL 04
	RCL[times] 09
	RCL/ 08
	RCL 01
	x=0?
	SKIP 08
	RCL Y
	RCL- 05
	x[<->]y
	RCL 08
	LN1+x
	[times]
	e[^x]
	/
	RCL- Y
	SKIP 05
	RCL- 01
	x=0?
	ERR 18  // N=0 and I=0! -> Error: "Invalid data"
	RCL[times] 04
	RCL- 05
	RTN

LBL 04  // PMT=?
	XEQ 07
	x=0?
	SKIP 11
	RCL 01
	x=0?
	SKIP 04
	0
	STO 04
	XEQ 09
	SKIP 10
	RCL 03
	RCL[times] 08
	RCL/ 09
	SKIP 06
	RCL 01
	x=0?
	ERR 18  // N=0 and I=0! -> Error: "Invalid data"
	RCL 03
	RCL+ 05
	RCL/ 01
	+/-
	RTN

LBL 05  // FV=?
	XEQ 07
	RCL 01
	x=0?
	ERR 13  // FV invalid for N=0! -> Error: "Bad mode"
	x[<->]y
	x=0?
	SKIP 11
	LN1+x
	[times]
	e[^x]
	RCL 04
	RCL[times] 09
	RCL/ 08
	STO Z
	RCL+ 03
	[times]
	-
	SKIP 03
	RCL- 04
	[times]
	RCL- 03
	RTN

LBL 06  // check parameters (NP,NI)
	RCL 06
	x=0?
	ERR 16  // NP=0! -> Error: "Invalid parameter"
	CF 06
	x<0?
	SF 06   // set payments at begin of period (BEGin mode)
	RCL 07
	CF 07
	x=0?
	SF 07   // set continuous (theoretical) compounding
	RTN

LBL 07  // I -> i,k
	XEQ 06
	1
	STO 09
	RCL[times] 02
	x=0?
	SKIP 12
	SDR 02
	FS? 07
	SKIP 03
	RCL/ 07
	LN1+x
	RCL[times] 07
	RCL 06
	ABS
	/
	e[^x]-1
	FS? 06
	STO+ 09
	STO 08
	RTN

LBL 08  // SLV routine for i
	STO 08
	1
	STO 09
	DROP
	FS? 06
	STO+ 09
	DROP

LBL 09  // TVM expression
	RCL 03
	RCL+ 05
	RCL 08
	x=0?
	SKIP 09
	LN1+x
	RCL[times] 01
	e[^x]-1
	/
	RCL+ 03
	RCL[times] 08
	RCL/ 09
	RCL+ 04
	SKIP 03
	RCL+ 01
	RCL[times] 04
	+
	RTN

