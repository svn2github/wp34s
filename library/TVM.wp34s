/* This file is part of 34S.
 * 
 * 34S is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * 34S is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
=====================================
* Extended TVM-Solver for the WP34s *
=====================================

Keyboard-Layout:
----------------
  N      PV    PMT     FV
[ A ]  [ B ]  [ C ]  [ D ]

  NP     NI     I
[STO]  [RCL]  [ Rv]
     \   |   /
       [XEQ]

Flags/Registers/Labels:
-----------------------
       00     01   02   03   04   05   06   07   08   09   Stack
Flag   Entry? --   --   --   --   --   <0?  =0?  --   --
Reg.   I2     N    I    PV   PMT  FV   NP   NI   i    k
Lbl.   Start  N?   I?   PV?  PMT? FV?  Init I->i SLV  TVM

Remarks:
========
- program 'TVM' should be loaded into and called from RAM
- [XEQ]'TVM' at first to initialize registers and parameters
- enter values for parameters NP,NI if desired (default=1)
- all financial keys for N,PV,PMT,FV and NP,NI,I work as follows:
  input+key stores the value, key alone calculates the value
  (or just recalls it for NP and NI)
- [R/S] resets the ENTRY? flag (e.g. after own calculations)
- alternative method to use the program:
  [STO/RCL/XEQ]01-05 to store/recall/calculate N,I,PV,PMT,FV
    (result after [XEQ] is not stored automatically!)
  [STO/RCL]06-07 to store/recall NP,NI
- a different 2nd initial guess for I (default=1%) can be entered
  in R00 if the solver fails (the 1st guess 0% is hard-coded)
- error messages are displayed if invalid values have been entered:
  (don't use [R/S] after any error message!)
    NP=0 -> "invalid parameter"
    both N=0 and I=0 -> "invalid data"
    calculate FV if N=0 -> "bad mode"
    no solution found for I -> "out of range"
    other invalid values -> "domain error" or "+/- infinity"

Values:
-------
N = total number of periods (or payments)
    N=0 for perpetual payments (N=infinite)
        (not allowed if I=0! -> Error: "invalid data")

I = annual interest rate (in % per year)
    I=0 for no compounding
        (not allowed if N=0! -> Error: "invalid data")

PV  = present value (or payment)
PMT = periodical payment
FV  = future value (or payment)
      (not defined for N=0! -> Error: "bad mode")

Parameters:
-----------
NP = payment frequency PF (payment periods per year)
     NP>0 postnumerand payments (at END of periods)
     NP<0 prenumerand payment (at BEGin of periods)
     NP=0 not allowed! -> Error: "invalid parameter"

NI = compounding frequency CF (interest periods per year)
     NI>0 decursive interest (compound at end of periods)
     NI<0 anticipative discount (compound at begin of periods)
     NI=0 continuous (theoretical) compounding (NI=infinite)
     |NI|=1 -> effective interest rate
     |NI|>1 -> nominal interest rate

*/

	001 LBL'TVM'    // extended TVM-Solver
	002 .     	// Initialize registers & parameters
	003 1
	004 R-CLR
	005 1
	006 STO 00      // I2=1% (2nd initial guess for I solver)
	007 STO 06      // NP=1  (annual payments at END of year or period)
	008 STO 07      // NI=1  (annual compounding at end of year or period)
	009 CLSTK
	010 LBL 00      // return after input or calculation
	011 FS?C 00
	012 SKIP 04
	013 RCL- X
	014 FILL
	015 RCL L
	016 STOP     	// wait for input or calculation
	017 BACK 01     // [R/S] -> clears ENTRY? flag
	018 LBL A
	019 ENTRY?
	020 SF 00
	021 FC? 00
	022 XEQ 01
	023 STO 01
	024 GTO 00
	025 LBL B
	026 ENTRY?
	027 SF 00
	028 FC? 00
	029 XEQ 03
	030 STO 03
	031 GTO 00
	032 LBL C
	033 ENTRY?
	034 SF 00
	035 FC? 00
	036 XEQ 04
	037 STO 04
	038 GTO 00
	039 LBL D
	040 ENTRY?
	041 SF 00
	042 FC? 00
	043 XEQ 05
	044 STO 05
	045 GTO 00
	046 LBL 21
	047 ENTRY?
	048 SF 00
	049 FC?S 00
	050 RCL 06
	051 STO 06
	052 GTO 00
	053 LBL 22
	054 ENTRY?
	055 SF 00
	056 FC?S 00
	057 RCL 07
	058 STO 07
	059 GTO 00
	060 LBL 23
	061 ENTRY?
	062 SF 00
	063 FC? 00
	064 XEQ 02
	065 STO 02
	066 GTO 00
	067 LBL 01      // N=?
	068 XEQ 07
	069 x=0?
	070 SKIP 14
	071 RCL 04
	072 RCL[times] 09
	073 RCL/ 08
	074 RCL- 05
	075 RCL L
	076 RCL+ 03
	077 x=0?
	078 SKIP 09
	079 /
	080 LN
	081 x[<->]y
	082 LN1+x
	083 /
	084 SKIP 03
	085 RCL- 03
	086 RCL- 05
	087 RCL/ 04
	088 RTN
	089 LBL 02      // I=?
	090 XEQ 06
	091 RCL 01
	092 x[!=]0?
	093 SKIP 07
	094 RCL+ 03
	095 FS? 06
	096 RCL+ 04
	097 RCL/ 04
	098 1/x
	099 +/-
	100 SKIP 11
	101 RCL[times] 04
	102 RCL+ 03
	103 RCL+ 05
	104 x=0?
	105 SKIP 06
	106 0     	// I1=0% (1st initial guess for I solver)
	107 RCL 00      // I2=1% (2nd initial guess for I solver)
	108 XEQ 07
	109 SLV 08      // call iterative solver
	110 SKIP 01
	111 ERR 08      // no solution found for I! -> Error: "out of range"
	112 x=0?
	113 SKIP 10
	114 LN1+x     	// i -> I
	115 RCL 06
	116 ABS
	117 [times]
	118 FS? 07
	119 SKIP 03
	120 RCL/ 07
	121 e[^x]-1
	122 RCL[times] 07
	123 SDL 02
	124 RTN
	125 LBL 03      // PV=?
	126 XEQ 07
	127 x=0?
	128 SKIP 16
	129 RCL 04
	130 RCL[times] 09
	131 RCL/ 08
	132 RCL 01
	133 x=0?
	134 SKIP 08
	135 RCL Y
	136 RCL- 05
	137 x[<->]y
	138 RCL 08
	139 LN1+x
	140 [times]
	141 e[^x]
	142 /
	143 RCL- Y
	144 SKIP 05
	145 RCL- 01
	146 x=0?
	147 ERR 18      // N=0 and I=0! -> Error: "invalid data"
	148 RCL[times] 04
	149 RCL- 05
	150 RTN
	151 LBL 04      // PMT=?
	152 XEQ 07
	153 x=0?
	154 SKIP 11
	155 RCL 01
	156 x=0?
	157 SKIP 04
	158 0
	159 STO 04
	160 XEQ 09
	161 SKIP 10
	162 RCL 03
	163 RCL[times] 08
	164 RCL/ 09
	165 SKIP 06
	166 RCL 01
	167 x=0?
	168 ERR 18      // N=0 and I=0! -> Error: "invalid data"
	169 RCL 03
	170 RCL+ 05
	171 RCL/ 01
	172 +/-
	173 RTN
	174 LBL 05      // FV=?
	175 XEQ 07
	176 RCL 01
	177 x=0?
	178 ERR 13      // FV invalid for N=0! -> Error: "bad mode"
	179 x[<->]y
	180 x=0?
	181 SKIP 11
	182 LN1+x
	183 [times]
	184 e[^x]
	185 RCL 04
	186 RCL[times] 09
	187 RCL/ 08
	188 STO Z
	189 RCL+ 03
	190 [times]
	191 -
	192 SKIP 03
	193 RCL- 04
	194 [times]
	195 RCL- 03
	196 RTN
	197 LBL 06      // check parameters (NP,NI)
	198 RCL 06
	199 x=0?
	200 ERR 16      // NP=0! -> Error: "invalid parameter"
	201 CF 06
	202 x<0?
	203 SF 06     	// set payments at begin of period (BEGin mode)
	204 RCL 07
	205 CF 07
	206 x=0?
	207 SF 07     	// set continuous (theoretical) compounding
	208 RTN
	209 LBL 07      // I -> i,k
	210 XEQ 06
	211 1
	212 STO 09
	213 RCL[times] 02
	214 x=0?
	215 SKIP 12
	216 SDR 02
	217 FS? 07
	218 SKIP 03
	219 RCL/ 07
	220 LN1+x
	221 RCL[times] 07
	222 RCL 06
	223 ABS
	224 /
	225 e[^x]-1
	226 FS? 06
	227 STO+ 09
	228 STO 08
	229 RTN
	230 LBL 08      // SLV routine for i
	231 STO 08
	232 1
	233 STO 09
	234 DROP
	235 FS? 06
	236 STO+ 09
	237 DROP
	238 LBL 09      // TVM equation
	239 RCL 03
	240 RCL+ 05
	241 RCL 08
	242 x=0?
	243 SKIP 09
	244 LN1+x
	245 RCL[times] 01
	246 e[^x]-1
	247 /
	248 RCL+ 03
	249 RCL[times] 08
	250 RCL/ 09
	251 RCL+ 04
	252 SKIP 03
	253 RCL+ 01
	254 RCL[times] 04
	255 +
	256 RTN
