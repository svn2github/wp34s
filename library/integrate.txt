This file is part of 34S.

34S is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

34S is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with 34S.  If not, see <http://www.gnu.org/licenses/>.




This code is the source for the internal integration routine.

The only change of note is the call to the user's routine is done as XEQ 00
instead of XEQUSR.


	001: LBL B
	002: SPEC?
	003: GTO 08
	004: X<>Y
	005: SPEC?
	006: GTO 08
	007: X=? Y		// Check if range is zero
	008: GTO 09
	009: X<>Y
	010: cENTER		// Compute (x-y)/2 and (x+y)/2
	011: +
	012: 2
	013: /
	014: X<> Z
	015: -
	016: 2
	017: /
	018: cSTO 00		// Also stores the midpoint
	019: iC 00		// Initialise the summations to zero
	020: STO 02
	021: STO 03
	022: iC 03		// Loop through the common points (15.02903)
	023: STO 04
	024: XEQ 04
	025: XEQ 00
	026: SPEC?
	027: GTO 08
	028: XEQ 07
	029: XEQ 05
	030: XEQ 00
	031: SPEC?
	032: GTO 08
	033: XEQ 07
	034: ISG 04
	035: BACK 11
	036: RCL 00
	037: STO* 02
	038: RCL 01		// Evaluate at midpoint for the Kronrod estimate
	039: FILL
	040: XEQ 00
	041: SPEC?
	042: GTO 02
	043: iC 04		// 0.1494455...
	044: *
	045: STO+ 03
	046: iC 02		// Now loop through the Kronrod points (5.01402)
	047: STO 04
	048: XEQ 04
	049: XEQ 00
	050: SPEC?
	051: GTO 02
	052: XEQ 06
	053: XEQ 05
	054: XEQ 00
	055: SPEC?
	056: GTO 02
	057: XEQ 06
	058: ISG 04
	059: BACK 11
	060: RCL 00
	061: STO* 03
	062: XEQ 03		// Set up the stack for our output
	063: RCL 03
	064: RCL- 02
	065: RCL 03
	066: RTN
	067: LBL 04		// Calculate the first point from the xi
	068: iC ->04
	069: RCL* 00
	070: RCL+ 01
	071: FILL
	072: RTN
	073: LBL 05		// Calculate the second point from the xi
	074: RCL 01
	075: iC ->04
	076: RCL* 00
	077: -
	078: FILL
	079: RTN
	080: LBL 06		// Do a Kronrod accumulation, f(xi) in X
	081: RCL 04		// i, f, ?, ?
	082: INC X		// i+1, f, ?, ?
	083: iC ->X		// ki, i+1, f, ?
	084: STO L
	085: RCL Z		// f, ki, i+1, f
	086: FILL		// f, f, f, f
	087: RCL* L		// ki*f, f, f, f
	088: STO+ 03
	089: RTN
	090: LBL 07		// Gauus Kronrod accumulation, f(xi) in X
	091: RCL 04
	092: INC X		// I+1, f, ?, ?
	093: RCL Y		// f, I+1, f, ?
	094: RCL X		// f, f, I+1, f
	095: iC ->Z		// gi, f, f, I+1
	096: INC T		// gi, f, f, I+2
	097: *			// gi*f, f, I+2, I+2
	098: STO+ 02
	099: DROP		// f, I+2, I+2, I+2
	100: iC ->Z		// ki, f, I+2, I+2
	101: *			// ki*f, I+2, I+2, I+2
	102: STO+ 03
	103: RTN
	104: LBL 09		// Initial estimates equal, integral is zero
	105: XEQ 03
	106: iC 00		// Zero
	107: ENTER
	108: STO L
	109: RTN
	110: LBL 08		// A value or limit is NaN
	111: XEQ 03
	112: # NaN
	113: ENTER
	114: STO L
	115: RTN
	116: LBL 02		// A value is NaN after the Gauss estimate
	117: XEQ 03
	118: # NaN
	119: RCL 02
	120: STO L
	121: RTN
	122: LBL 03		// Restore the integration limits
	123: RCL 01
	124: RCL- 00
	125: RCL 01
	126: RCL+ 00		// l, u
	127: RTN
	128: LBL 00
	129: RTN
Checksum: 



We're using a Gauss-Kronrod quadrature with 10 Guass points and
21 Kronrod points.  We calculate the Guass quadrature first so we
can give an estimate if an error occurs during the extra evaluations
of the Kronrod quadrature.  The integrator relies on a four level
stack being set.  This is always true for the internal integrator,
however the code above will require modification to work with an
eight level stack.


On entry the stack looks like:
     Y       lower limit
     X       upper limit

On return the stack looks like:
     L       integral (Gauss)
     I       unchanged

     T       lower limit (Y on input)
     Z       upper limit (X on input)
     Y       error estimate (Gauss - Kronrod)
     X       integral (Kronrod)


Register use:
	00	Half interval length
	01	Mid-point of interval
	02	Gauss summation
	03	Kronrod summation
	04	Loop index


