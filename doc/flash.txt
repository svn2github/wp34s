Commands to handle the flash memory on the real calculator
==========================================================

Hold down ON (EXIT) and press one of the following keys:

STO - Backup:  This creates a copy of the RAM in flash memory.

RCL - Restore: This restores a previously created backup. 

D - Debug:     Disables all power saving. Unlocks the following ON+S
               combination. The small "=" is lit.

S - SAM-BA:    Clears the GPNVM1 bit and turns the calculator off.
               S is on the '6' key. Works only in debug mode.
               ATTENTION: You can now only boot into SAM-BA mode!
               Without the SAM-BA software and the cable, you're lost!

These ON key combinations have to be pressed twice in a row without
releasing the ON key to be executed.

Do an ON+STO before you want to flash a new release! After flashing,
your backup should still be in place if you didn't accidently press the
ERASE button on the cable but used ON+S instead to get into SAM-BA boot 
mode.

There are additional commands in the I/O catalogue (f+STO):

PSTO n   Store program in region n. n is 0 to 8. A region is a
         block of flash memory that can hold a copy of the
         user program area. Alphanumeric labels in flash can be
         called with XEQ. This allows creation of libraries.
         Use the new label browser (f+RCL) to see the labels.
         Region 0 is the same region that is stored with the backup.

PRCL n   Restore region n to the program area where data can be edited.

P<> n    Swap the current program with the contents of region n.

LOAD     Executes ON+RCL. This is available on the emulator, too.

SAVE     Executes ON+STO. See above.

RRCL     Recall the register data only from a previously created backup.

SRCL     Recall the setup data only from a previously created backup.

You can recall a group of registers from the backup with the command
R-COPY from the program catalogue. Just give it a negative value in X
and the source block will be fetched from flash instead of RAM. 

Single registers in flash can be read with RCF and its arithmetic variants
(RCF+, etc.)


Mapping from memory regions to emulator state files
===================================================

Region  Flash address  state file   Remark
---------------------------------------------------------------------
unnamed   0x11fc00     wp34s-R.dat  Registers and state of the backup
   0      0x11f800     wp34s-0.dat  User program of the backup
   1      0x11f400     wp34s-1.dat  Default library            
   2      0x11f000     wp34s-2.dat  Generic user program region
   3      0x11ec00     wp34s-3.dat  ditto
   4      0x11e800     wp34s-4.dat  ditto
   5      0x11e400     wp34s-5.dat  ditto
   6      0x11e000     wp34s-6.dat  ditto
   7      0x11dc00     wp34s-7.dat  ditto
   8      0x11d800     wp34s-8.dat  ditto
  RAM                  wp34s.dat    Emulator image of the RAM area

wp34s.dat is only written on exit of the emulator software.
wp34s-?.dat is written each time a flash command is executed.
All files are only read into memory on emulator startup. If we find
enough free space in flash we may increase the number of regions.


How to transfer data between the calculator and your PC (SAM-BA)
================================================================

This discussion is superceded by the new serial I/O commands. It's
still interesting enough to leave it here as a reference.

The whole RAM is saved to address 0x11f800 (relative address 0x1f800)
with ON+STO. This can be copied to your PC or loaded from it.

1. From calculator to PC

   a) Do an ON+STO, then ON+D then ON+S with the cable connected.
   b) Press ON once and start SAM-BA on the PC. It should connect.
   c) Set the start address to 0x11F800 and the size to 0x800
   d) Enter a file name in the receive field.
   e) You can now receive the file with SAM-BA.
   f) Move it under the name wp34s.dat into your emulator directory.
   g) The emulator should accept the file. Your registers and programs
      will than be in place.
   h) To get your calculator back in business, start the "Boot from flash"
      script in SAM-BA, the same procedure you should know from flashing
      the firmware.
   i) Reset and power the calculator up and perform a restore with ON+RCL.
      The latest version does the restore automatically when RAM is lost.

2. From PC to calculator

   a) Perform steps (a) to (c) from above. No need to set the size.
   b) Point SAM-BA to your wp34s.dat file from the emulator.
   c) You can now send the short file with SAM-BA.
   d) Perform steps (h) and (i) from above.

The program regions accessible with the commands PSTO, PRCL and P<> are
stored at addresses 0x11f000 and above (see table above) and have a length
of 0x400 (1 KB) each. The emulator creates files 'wp32s-?.dat', '?' being 
the region number. You can handle these files the same way as the complete
state file from the emulator. The regions have identical formatting and
can be swapped by copying their data to the "wrong" place. The register
and state portion of the backup area at 0x11fc00 is formatted differently. 

If you want to get your emulator data into the calculator in one go,
do the following in Windows:

copy /b calc.bin+wp34s-8.dat+...+wp34s-2.dat+wp34s-1.dat+wp34s.dat calc-full.bin

As an alternative the following will copy the backup data instead of the
RAM state file:

copy /b calc.bin+wp34s-8.dat+...+wp34s-2.dat+wp34s-1.dat+wp34s-0.dat+wp34s-R.dat calc-full.bin

The resulting file can be programmed into flash and all data is readily
available.


How to transfer data between the calculator and your PC (Serial I/O)
====================================================================

Both the emulator and the calculator can talk to each other with the
same cable used for programming. In the emulator directory a text file
wp34s.ini must be placed that contains the name of the port such as COM2:

On the receiver (emulator or calculator) execute RECV (from X.FCN).

On the sender, you can send data with the following commands:

SENDA   Sends all memory including state.
SENDP   Sends program memory.
SENDR   Sends registers 00 to 99.
LSEND n Sends a library region directly. 
        It arrives in RAM and can be stored with PSTO.

